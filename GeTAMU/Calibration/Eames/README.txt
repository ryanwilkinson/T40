// Readme file for geCal.cxx Script
// Eames A Bennett
// 06/22/2017


SECTION A:  Automatic Calibration

In order to properly run the geCal script you'll need (at a minimum) 4 files in the directory you plan to run the script in:

    1)  geCal.cxx
    2)  randomBin.cxx
    3)  60Co Root File
    4)  152Eu Root File
    5)  Background Root File (optional)

To load the script, open a session of root and execute `.L geCal.cxx` from the interactive interpreter.  Once the script loads, you can perform a complete calibration of the HPGe detectors by executing the command:

    geCal("60Co-run.root","152Eu-run.root")

        OR

    geCal("60Co-run.root","152Eu-run.root","Background-run.root")

This will automagically perform a 2 point calibration using the 60Co source data, followed by a 7-point refinement calibration using the 152Eu source data.  By including a background run, the refinement calibration uses a full 9 points.  The script also automatically creates appropriate directories to store the calibrated spectra, the nptool calibration files, and correlated channel number and peak energy for each calibration.

The appropriate nptool calibration file will be located in its corresponding directory.  The 2-point 60Co calibration file is located in the coFit/ directory and is named "GeCoCalParam.txt".  The 7-point 152Eu calibration file is located in the euFit/ directory.  It includes both a linear fit (linrCalParam.txt) and a quadratic fit (quadCalParam.txt).  If the 9-point background calibration is opted for, the two linear and quadratic fit files will be generated (same names) but will be located in the bkFit/ directory.

========================================================================

SECTION B:  Manual Calibration

Multiple functions have been created to allow for particular steps of the calibration to be performed independently of one-another.  The included functions are as follows:

    -> npFit(TTree physTree) - This performs a 2-point calibration using the TTree from an open 60Co source file.  It outputs the nptool calibration file and saves all generated spectra.  A directory title coFit/ must be in the directory this script is run from.
    -> fitEuPeaks(TTree physTree, TTree bkTree = 0) - This performs a 7- or 9-point fit depending on if a background run is input.  It outputs the peak/channel value correlations.  The "GeCoCalParams.txt" file must exist in the coFit/ directory in order for this script to run.  A directory euFits/ or bkFits/ must be created in the directoy you run the script from in order for this to work.
    -> fitEuFits() - Performs fit on and calculates residuals for the 152Eu fits.  The fitEuPeaks(/...) routine must have been run in order for this to work.  Outputs nptool calibration files.
    -> fitBkFits() - same as fitEuFits, but for the 9-point background fit.  Outputs nptool calibration files.
    -> quikCalSpec(TTree physTree, string fitFile, int cloverNbr, int crystalNbr) - quickly creates a calibrated Ge spectrum for a given clover/crystal combination from data in physTree.  The fitFile must be a .txt file generated by either npFit, fitEuFits, or fitBkFits.  Does not generate anything, but leaves the histogram up to be viewed/edited/etc.  I found it quite useful while building this.

========================================================================

SECTION C:  Troubleshooting

Problems I've run into while performing calibrations:
    -> Loading geCal.cxx results in multiple compiler errors - I believe one of the header files uses the "using namespace std;" line which means if you load geCal.cxx multiple times you can get errors.  Simply quitting the session of root and restarting it seems to resolve this.
    -> npFit(/...) does not correctly find Co peaks - In the case that there are low statistics for the Co source data, it's possible that npFit will identify low energy noise as one of the calibration peaks.  To solve this, you can up the threshold on the TSpectrum search in npFit.  You can find the threshold on line 155 in the coFit routine.  By default, the threshold is set to 0.3 but can be increased to avoid the aforementioned issue.
